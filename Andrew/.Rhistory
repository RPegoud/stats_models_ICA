# Attempt to fit WLS
dfclipped = clip(df, lower=0.01, upper=0.99)
help(clip)
# Attempt to fit WLS
dfclipped = clip.data(df, lower=0.01, upper=0.99)
install.packages("raster")
install.packages("fsbrain")
# try quantile clipping on data to deal with outliers
library(raster)
dfclipped = clip.data(select(df, c('noxem', 'ws')), lower=0.01, upper=0.99)
# try quantile clipping on data to deal with outliers
library(fsbrain)
# try quantile clipping on data to deal with outliers
library(raster)
dfclipped = clip.data(select(df, c('noxem', 'ws')), lower=0.01, upper=0.99)
# try quantile clipping on data to deal with outliers. Park idea for now
# library(raster)
# dfclipped = clip.data(select(df, c('noxem', 'ws')), lower=0.01, upper=0.99)
# print(dfclipped)
#
# Attempt to fit WLS
max_iter = 20
# add convergence criterion
m3w <- lm(nox ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2), data=dfclipped)
df["dy"] <- c(NaN, diff(df$nox))
df["dy"] <- c(NaN, diff(df$nox))
df <- read.table("emissionssw.dat", header=TRUE)
head(df)
df["dy"] <- c(NaN, diff(df$nox))
# m4 <- lm(dy ~ noxem + ws + humidity, data=df)
m4 <- lm(dy ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2) + humidity, data=df)
summary(m4)
plot(m4)
# try quantile clipping on data to deal with outliers. Park idea for now
# library(raster)
# dfclipped = clip.data(select(df, c('noxem', 'ws')), lower=0.01, upper=0.99)
# print(dfclipped)
#
# Attempt to fit WLS
# add convergence criterion
max_iter = 100
m3w <- lm(nox ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2), data=dfclipped)
# try quantile clipping on data to deal with outliers. Park idea for now
# library(raster)
# dfclipped = clip.data(select(df, c('noxem', 'ws')), lower=0.01, upper=0.99)
# print(dfclipped)
#
# Attempt to fit WLS
# add convergence criterion
max_iter = 100
m3w <- lm(nox ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2), data=df
for (i in 1:max_iter) {
# try quantile clipping on data to deal with outliers. Park idea for now
# library(raster)
# dfclipped = clip.data(select(df, c('noxem', 'ws')), lower=0.01, upper=0.99)
# print(dfclipped)
#
# Attempt to fit WLS
# add convergence criterion
max_iter = 100
m3w <- lm(nox ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2), data=df)
for (i in 1:max_iter) {
m3w <- lm(nox ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2), data=df, weights = 1/abs(resid(m3w)))
}
summary(m3w)
plot(m3w)
df["dy"] <- c(NaN, diff(df$nox))
# m4 <- lm(dy ~ noxem + ws + humidity, data=df)
m4 <- lm(dy ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2), data=df)
summary(m4)
plot(m4)
plot.ts(df)
lapply(names(df), function(col) {
acf(df[[col]], main = paste("ACF for", col))
})
plot.ts(df)
lapply(names(df), function(col) {
acf(df[[col]], main = paste("ACF for", col))
})
df <- read.table("emissionssw.dat", header=TRUE)
head(df)
plot.ts(df)
lapply(names(df), function(col) {
acf(df[[col]], main = paste("ACF for", col))
})
plot(df$[1:6])
plot.ts(df)
lapply(names(df), function(col) {
acf(df[[col]], main = paste("ACF for", col))
})
plot(df$nox[1:6])
plot.ts(df)
lapply(names(df), function(col) {
acf(df[[col]], main = paste("ACF for", col))
})
plot(df$nox[1:6])
summary(df)
# try quantile clipping on data to deal with outliers. Park idea for now
# library(raster)
# dfclipped = clip.data(select(df, c('noxem', 'ws')), lower=0.01, upper=0.99)
# print(dfclipped)
#
# Attempt to fit WLS
# add convergence criterion
max_iter = 100
m3w <- lm(log(nox) ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2), data=df)
for (i in 1:max_iter) {
m3w <- lm(log(nox) ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2), data=df, weights = 1/abs(resid(m3w)))
}
summary(m3w)
plot(m3w)
# try quantile clipping on data to deal with outliers. Park idea for now
# library(raster)
# dfclipped = clip.data(select(df, c('noxem', 'ws')), lower=0.01, upper=0.99)
# print(dfclipped)
#
# Attempt to fit WLS
# add convergence criterion
max_iter = 100
m3w <- lm(log(nox) ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2), data=df)
# for (i in 1:max_iter) {
#   m3w <- lm(log(nox) ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2), data=df, weights = 1/abs(resid(m3w)))
# }
summary(m3w)
plot(m3w)
# try quantile clipping on data to deal with outliers. Park idea for now
# library(raster)
# dfclipped = clip.data(select(df, c('noxem', 'ws')), lower=0.01, upper=0.99)
# print(dfclipped)
#
# Attempt to fit WLS
# add convergence criterion
max_iter = 100
m3w <- lm(log(nox) ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2), data=df)
for (i in 1:max_iter) {
m3w <- lm(log(nox) ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2), data=df, weights = 1/abs(resid(m3w)))
}
summary(m3w)
plot(m3w)
# try quantile clipping on data to deal with outliers. Park idea for now
# library(raster)
# dfclipped = clip.data(select(df, c('noxem', 'ws')), lower=0.01, upper=0.99)
# print(dfclipped)
#
# Attempt to fit WLS
# add convergence criterion
max_iter = 100
m3w <- lm(log(nox) ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2) + humidity, data=df)
for (i in 1:max_iter) {
m3w <- lm(log(nox) ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2), data=df, weights = 1/abs(resid(m3w)))
}
summary(m3w)
plot(m3w)
# try quantile clipping on data to deal with outliers. Park idea for now
# library(raster)
# dfclipped = clip.data(select(df, c('noxem', 'ws')), lower=0.01, upper=0.99)
# print(dfclipped)
#
# Attempt to fit WLS
# add convergence criterion
max_iter = 100
m3w <- lm(log(nox) ~ (log(noxem) + log(ws))^2, data=df)
for (i in 1:max_iter) {
m3w <- lm(log(nox) ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2), data=df, weights = 1/abs(resid(m3w)))
}
summary(m3w)
plot(m3w)
# try quantile clipping on data to deal with outliers. Park idea for now
# library(raster)
# dfclipped = clip.data(select(df, c('noxem', 'ws')), lower=0.01, upper=0.99)
# print(dfclipped)
#
# Attempt to fit WLS
# add convergence criterion
max_iter = 100
m3w <- lm(log(nox) ~ (log(noxem) + log(ws))^2, data=df)
for (i in 1:max_iter) {
m3w <- lm(log(nox) ~ (log(noxem) + log(ws))^2, data=df, weights = 1/abs(resid(m3w)))
}
summary(m3w)
plot(m3w)
# try quantile clipping on data to deal with outliers. Park idea for now
# library(raster)
# dfclipped = clip.data(select(df, c('noxem', 'ws')), lower=0.01, upper=0.99)
# print(dfclipped)
#
# Attempt to fit WLS
# add convergence criterion
max_iter = 100
m3w <- lm(log(nox) ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2), data=df)
for (i in 1:max_iter) {
m3w <- lm(log(nox) ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2), data=df, weights = 1/abs(resid(m3w)))
}
summary(m3w)
plot(m3w)
# try quantile clipping on data to deal with outliers. Park idea for now
# library(raster)
# dfclipped = clip.data(select(df, c('noxem', 'ws')), lower=0.01, upper=0.99)
# print(dfclipped)
#
# logging the response gives a good residuals vs fitted plot
# Attempt to fit WLS
# add convergence criterion
max_iter = 100
m3w <- lm(log(nox) ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2) + 0, data=df)
for (i in 1:max_iter) {
m3w <- lm(log(nox) ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2) + 0, data=df, weights = 1/abs(resid(m3w)))
}
summary(m3w)
plot(m3w)
library(MASS)
mlog <- lm(log(nox) ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2), data=df)
summary(mlog)
plot(mlog)
mlog_robust <- rlm(log(nox) ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2), data=df)
summary(mlog_robust)
plot(log(mlog_robust))
library(MASS)
mlog <- lm(log(nox) ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2), data=df)
summary(mlog)
plot(mlog)
mlog_robust <- rlm(log(nox) ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2), data=df)
summary(mlog_robust)
plot(mlog_robust)
library(MASS)
# mlog <- lm(log(nox) ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2), data=df)
# summary(mlog)
# plot(mlog)
mlog_robust <- rlm(log(nox) ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2), data=df)
summary(mlog_robust)
plot(mlog_robust)
library(MASS)
# mlog <- lm(log(nox) ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2), data=df)
# summary(mlog)
# plot(mlog)
mlog_robust <- rlm(log(nox) ~ 0 + (noxem + ws)^2 + I(ws^2) + I(noxem^2), data=df)
summary(mlog_robust)
plot(mlog_robust)
library(MASS)
# mlog <- lm(log(nox) ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2), data=df)
# summary(mlog)
# plot(mlog)
mlog_robust <- rlm(log(nox) ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2), data=df)
summary(mlog_robust)
plot(mlog_robust)
library(MASS)
mlog <- lm(log(nox) ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2), data=df)
summary(mlog)
plot(mlog)
mlog_robust <- rlm(log(nox) ~ (noxem + ws)^2 + I(ws^2) + I(noxem^2), data=df)
summary(mlog_robust)
plot(mlog_robust)
df <- read.table("emissionssw.dat", header=TRUE)
head(df)
hist(df$nox)
hist(df$nox)
hist(log(df$nox))
boxplot(df)
plot.ts(df)
lapply(names(df), function(col) {
acf(df[[col]], main = paste("ACF for", col))
})
plot(df$nox[1:6])
acf(log(df$nox))
plot.ts(df)
lapply(names(df), function(col) {
acf(df[[col]], main = paste("ACF for", col))
})
plot(df$nox[1:6])
acf(log(df$nox))
plot(df$noxem)
plot.ts(df)
lapply(names(df), function(col) {
acf(df[[col]], main = paste("ACF for", col))
})
plot(df$nox[1:6])
acf(log(df$nox))
plot(df$noxem, type='l')
plot.ts(df)
lapply(names(df), function(col) {
acf(df[[col]], main = paste("ACF for", col))
})
plot(df$nox[1:6])
acf(log(df$nox))
plot(df$noxem[:12], type='l')
plot.ts(df)
lapply(names(df), function(col) {
acf(df[[col]], main = paste("ACF for", col))
})
plot(df$nox[1:6])
acf(log(df$nox))
plot(df$noxem[1:12], type='l')
plot.ts(df)
lapply(names(df), function(col) {
acf(df[[col]], main = paste("ACF for", col))
})
plot(df$nox[1:6])
acf(log(df$nox))
plot(df$noxem[1:13], type='l')
plot.ts(df)
lapply(names(df), function(col) {
acf(df[[col]], main = paste("ACF for", col))
})
plot(df$nox[1:6])
acf(log(df$nox))
par(mfrow=c(2,1))
plot(df$noxem[1:13], type='l')
plot(df$nox[1:13], type='l')
df <- read.table("emissionssw.dat", header=TRUE)
head(df)
m1 <- lm(nox ~ ., data=df)
summary(m1)
plot(m1)
